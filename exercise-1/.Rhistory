install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
install.packages("devtools")
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View('vehicles')
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
vehic <- data.frame("vehicles")
View(vehic)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
view(vehicles)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
manufacturers_unique <- unique(manufacturers)
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- vehicles[vehicles$year == 1997]
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- vehicles[, vehicles$year == 1997]
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- vehicles[vehicles$year == 1997, ]
View(vehicles_1997)
?order
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
sorted_by_hwy_1997 <- vehicles_1997[order(vehicles_1997$hwy)]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
sorted_by_hwy_1997 <- vehicles_1997[order(vehicles_1997$hwy), ]
View(sorted_by_hwy_1997)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- vehicles_1997$city + vehicles_1997$hwy / 2
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- mean(vehicles_1997$city + vehicles_1997$hwy)
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
vehicles_1997 <- vehicles_1997[order(vehicles_1997$hwy), ]
manufacturers <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
manufacturers_unique <- unique(manufacturers)
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
vehicles_1997 <- vehicles_1997[order(vehicles_1997$hwy), ]
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- mean(vehicles_1997$city + vehicles_1997$hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- mean(vehicles_1997$cty + vehicles_1997$hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- vehicles_1997$cty + vehicles_1997$hwy
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- vehicles_1997$cty + vehicles_1997$hwy / 2
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
lenght(unique(manufacturers))
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
length(unique(manufacturers))
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$cty + vehicles_1997$hwy) / 2
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
dtf <- vehicles[vehicles$drive == '2-Wheel Drive' & vehicles$cty > 20,]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy <- dtf[dtf$hwy == min(dtf$hwy)]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_hwy <- dtf[dtf$hwy == min(dtf$hwy), ]
View(worst_hwy)
make_year_filter <- function(make_choice, year_choice) {
filtered <- vehicles[vehicles$make == make_choice & vehicles$year == year_choice, ]
filtered[filtered$hwy == max(filtered$hwy), ]
}
# What was the most efficient Honda model of 1995?
make_year_filter("Honda", 1995)
